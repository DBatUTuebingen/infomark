---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: ping_db
  pull: default
  image: postgres:11.2-alpine
  commands:
  - "until PGPASSWORD=postgres psql -U postgres -d infomark -h database \\\n -c \"SELECT 1;\" >/dev/null 2>&1; do sleep 1; done\n"
  - "PGPASSWORD=postgres psql -U postgres -d infomark -h database \\\n  -c \"SELECT * FROM pg_catalog.pg_tables;\"\n"

- name: ping_amqp
  pull: default
  image: rabbitmq:3.7.3-management-alpine
  commands:
  - "until wget --spider http://rabbitAMQP:15672 >/dev/null 2>&1; do sleep 1; done"

- name: mock
  pull: default
  image: python:3
  commands:
  - cd database
  - pip3 install -r requirements.txt
  - python3 mock.py

- name: seed
  pull: default
  image: postgres:11.2-alpine
  commands:
  - cd database
  - "PGPASSWORD=postgres psql -h 'database' -U 'postgres' -d 'infomark' -f schema.sql >/dev/null"
  - "PGPASSWORD=postgres psql -h 'database' -U 'postgres' -d 'infomark' -f mock.sql >/dev/null"

- name: build
  pull: default
  image: golang
  commands:
  - go version
  - go build infomark.go
  environment:
    GOPROXY: https://gomods.patwie.com/

- name: test
  pull: default
  image: golang
  commands:
  - cp .infomark.yml.ci ~/.infomark.yml
  - go test ./api/app -cover -v
  - go test ./api/helper -cover -v
  environment:
    GOPROXY: https://gomods.patwie.com/

- name: docs
  pull: default
  image: golang
  commands:
  - cp .infomark.yml.ci ~/.infomark.yml
  - go generate
  environment:
    GOPROXY: https://gomods.patwie.com/

- name: create_release
  pull: default
  image: patwie/tar
  commands:
    - tar -czvf infomark.tar.gz api.yaml infomark README.md LICENSE .infomark.yml.example docker-compose.yml database/schema.sql

- name: publish_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    files:
      - infomark.tar.gz
    checksum:
      - md5
      - sha256
  when:
    event: tag

services:
- name: database
  pull: default
  image: postgres
  environment:
    POSTGRES_DB: infomark
    POSTGRES_PASSWORD: postgres
    POSTGRES_USER: postgres

- name: rabbitAMQP
  pull: default
  image: rabbitmq:3.7.3-management-alpine
  environment:
    RABBITMQ_DEFAULT_PASS: password
    RABBITMQ_DEFAULT_USER: user
---
kind: signature
hmac: bd9890ef49a7d20dcbbb0b6afd0ebc14a71903a0331d348638f3d184f89b5e24
...
