pipeline:
  ping_db:
    image: postgres:11.2-alpine
    commands:
      # wait for postgres service to become available
      - |
        until PGPASSWORD=postgres psql -U postgres -d infomark -h database \
         -c "SELECT 1;" >/dev/null 2>&1; do sleep 1; done
      # query the database
      - |
        PGPASSWORD=postgres psql -U postgres -d infomark -h database \
          -c "SELECT * FROM pg_catalog.pg_tables;"
  ping_amqp:
    image: rabbitmq:3.7.3-management-alpine
    commands:
      -  until wget --spider http://rabbitAMQP:15672 >/dev/null 2>&1; do sleep 1; done
  mock:
    image: python:3
    commands:
      - cd database
      - pip3 install -r requirements.txt
      - python3 mock.py
  seed:
    image: postgres:11.2-alpine
    commands:
      - cd database
      - PGPASSWORD=postgres psql -h 'database' -U 'postgres' -d 'infomark' -f schema.sql >/dev/null
      - PGPASSWORD=postgres psql -h 'database' -U 'postgres' -d 'infomark' -f mock.sql >/dev/null
  build:
    image: golang
    environment:
      - GOPROXY=https://gomods.patwie.com/
    commands:
      - go version
      - go build infomark-backend.go
  test:
    image: golang
    environment:
      - GOPROXY=https://gomods.patwie.com/
    commands:
      - cp .infomark.yml.ci ~/.infomark.yml
      - go test ./api/app -cover -v
      - go test ./api/helper -cover -v
  docs:
    image: golang
    environment:
      - GOPROXY=https://gomods.patwie.com/
    commands:
      - cp .infomark.yml.ci ~/.infomark.yml
      - go generate
      # - cat api.yaml

services:
  database:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=infomark
  rabbitAMQP:
    image: rabbitmq:3.7.3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password